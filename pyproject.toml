[tool.poetry]
name = "headless-kivy-pi"
version = "0.8.0"
description = "Headless renderer for Kivy framework on Raspberry Pi"
authors = ["Sassan Haradji <sassanh@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = 'https://github.com/sassanh/headless-kivy-pi/'
repository = 'https://github.com/sassanh/headless-kivy-pi/'
keywords = ['kivy', 'raspberry-pi', 'headless', 'display']
packages = [
  { include = "headless_kivy_pi" },
  { include = "headless_kivy_pi_pytest" },
]

[tool.poetry.dependencies]
python = "^3.11"
typing-extensions = "^4.8.0"

numpy = { version = "^1.24.2" }
kivy = { version = "^2.2.1" }
adafruit-circuitpython-rgb-display = { version = "^3.11.0", markers = "platform_machine=='aarch64'" }
adafruit-circuitpython-aw9523 = { version = "^1.1.7", markers = "platform_machine=='aarch64'" }

poethepoet = { version = "^0.24.2", optional = true }
screeninfo = { version = "^0.8.1", optional = true }
python-strtobool = "^1.0.0"

[tool.poetry.extras]
dev = ['poethepoet', 'screeninfo']

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.10"
pyright = "^1.1.368"
pytest = "^8.2.2"
pypng = "^0.20220715.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
lint = "ruff check . --unsafe-fixes"
typecheck = "pyright -p pyproject.toml ."
sanity = ["typecheck", "lint"]

[tool.ruff]
lint.select = ['ALL']
lint.ignore = ['INP001', 'PLR0911', 'D203', 'D213']
lint.fixable = ['ALL']
lint.unfixable = []

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR0913", "PLR0915"]
"headless_kivy_pi_pytest/*" = ["S101", "PLR0913", "PLR0915"]

[tool.ruff.format]
quote-style = 'single'

[tool.isort]
profile = "black"

[tool.pyright]
exclude = ['typings']
